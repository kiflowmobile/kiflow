import { Button } from '@/src/components/ui/button';
import { Image } from '@/src/components/ui/image';
import { SafeAreaView } from '@/src/components/ui/safe-area-view';
import { Text } from '@/src/components/ui/text';
import type { Course } from '@/src/constants/types/course';
import { Ionicons } from '@expo/vector-icons';
import { useRouter } from 'expo-router';
import React, { useEffect, useState } from 'react';
import { ScrollView, StyleSheet, View } from 'react-native';
import CourseCard from './components/CourseCard';

// üîπ –ú–æ–∫-–¥–∞–Ω—ñ
const mockCourses: Course[] = [
  {
    id: '1',
    title: 'React Native –¥–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤',
    instructor: '–Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ',
    description: '–í–∏–≤—á—ñ—Ç—å –æ—Å–Ω–æ–≤–∏ React Native —Ç–∞ —Å—Ç–≤–æ—Ä—ñ—Ç—å —Å–≤—ñ–π –ø–µ—Ä—à–∏–π –º–æ–±—ñ–ª—å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫.',
    image: 'https://picsum.photos/800/600?random=1',
    duration: '12 –≥–æ–¥–∏–Ω',
    rating: 4.5,
    students: 123,
    level: '–ü–æ—á–∞—Ç–∫–æ–≤–∏–π',
    slides: [
      {
        id: 's1',
        type: 'text',
        title: '–í—Å—Ç—É–ø',
        content: '–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –Ω–∞ –∫—É—Ä—Å React Native!',
      },
    ],
  },
  {
    id: '2',
    title: '–û—Å–Ω–æ–≤–∏ TypeScript',
    instructor: '–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª—å',
    description: '–ó—Ä–æ–∑—É–º—ñ–π—Ç–µ –±–∞–∑–æ–≤—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó TypeScript –¥–ª—è –∫—Ä–∞—â–æ—ó —Ç–∏–ø—ñ–∑–∞—Ü—ñ—ó.',
    image: 'https://picsum.photos/800/600?random=2',
    duration: '8 –≥–æ–¥–∏–Ω',
    rating: 4.8,
    students: 87,
    level: '–°–µ—Ä–µ–¥–Ω—ñ–π',
    slides: [
      {
        id: 's2',
        type: 'quiz',
        title: '–©–æ —Ç–∞–∫–µ TypeScript?',
        quiz: {
          question: 'TypeScript ‚Äî —Ü–µ...',
          options: ['–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞', '–§—Ä–µ–π–º–≤–æ—Ä–∫', '–ú–æ–≤–∞ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è'],
          correctAnswer: 2,
        },
      },
    ],
  },
  {
    id: '3',
    title: 'UI/UX –î–∏–∑–∞–π–Ω',
    instructor: '–û–ª–µ–≥ –°–∏–¥–æ—Ä–µ–Ω–∫–æ',
    description: '–ö—É—Ä—Å –ø—Ä–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–∏–≤–∞–±–ª–∏–≤–∏—Ö —ñ –∑—Ä—É—á–Ω–∏—Ö —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤.',
    image: 'https://picsum.photos/800/600?random=3',
    duration: '15 –≥–æ–¥–∏–Ω',
    rating: 4.2,
    students: 200,
    level: '–ü–æ—á–∞—Ç–∫–æ–≤–∏–π',
    slides: [
      {
        id: 's3',
        type: 'content',
        title: '–û—Å–Ω–æ–≤–∏ UI',
        mainPoint: '–ó—Ä–æ–∑—É–º—ñ–π—Ç–µ –∫–æ–ª—å–æ—Ä–∏, —à—Ä–∏—Ñ—Ç–∏ —Ç–∞ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—é.',
        tips: ['–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç', '–î–æ—Ç—Ä–∏–º—É–π—Ç–µ—Å—å —ñ—î—Ä–∞—Ä—Ö—ñ—ó'],
        example: '–ü—Ä–∏–∫–ª–∞–¥: —Ä–µ–¥–∏–∑–∞–π–Ω –º–æ–±—ñ–ª—å–Ω–æ–≥–æ –∑–∞—Å—Ç–æ—Å—É–Ω–∫—É',
      },
    ],
  },
];

const CoursesScreen = () => {
  const router = useRouter();
  const [courses, setCourses] = useState<Course[]>([]);

  useEffect(() => {
    setTimeout(() => {
      setCourses(mockCourses);
    }, 500);
  }, []);

  const defaultAvatarUrl =
    'https://www.shutterstock.com/image-vector/blank-avatar-photo-place-holder-600nw-1095249842.jpg';

  return (
    <SafeAreaView style={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <Button variant="link" action="default" onPress={() => router.push('/')}>
          <Ionicons name="arrow-back" size={24} />
        </Button>
        <Text style={styles.headerTitle}>–ö–£–†–°–ò</Text>
        <Image source={{ uri: defaultAvatarUrl }} style={styles.avatar} />
      </View>

      {/* Courses list */}
      <ScrollView contentContainerStyle={styles.listContainer}>
        {courses.length === 0 ? (
          <Text style={styles.loadingText}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫—É—Ä—Å—ñ–≤...</Text>
        ) : (
          <View style={styles.cardsContainer}>
            {courses.map(course => (
              <CourseCard key={course.id} course={course} />
            ))}
          </View>
        )}
      </ScrollView>
    </SafeAreaView>
  );
};

export default CoursesScreen;

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: '#fff' },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    borderBottomWidth: 1,
    borderBottomColor: '#ddd',
    paddingHorizontal: 16,
    paddingVertical: 12,
    backgroundColor: '#fff',
  },
  headerTitle: { fontSize: 20, fontWeight: 'bold', color: '#111' },
  avatar: { width: 40, height: 40, borderRadius: 20, borderWidth: 2, borderColor: '#000' },
  listContainer: { padding: 16 },
  cardsContainer: { gap: 16 },
  loadingText: { textAlign: 'center', color: '#666' },
});
